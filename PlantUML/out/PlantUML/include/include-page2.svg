<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1492px" preserveAspectRatio="none" style="width:801px;height:1492px;background:#FFFFFF;" version="1.1" viewBox="0 0 801 1492" width="801px" zoomAndPan="magnify"><defs/><g><!--MD5=[44604d3a5c21bada3eded4c753f938e5]
class CameraScalar--><g id="elem_CameraScalar"><rect codeLine="71" fill="#F1F1F1" height="181.4754" id="CameraScalar" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="287" x="373" y="7"/><ellipse cx="465.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M465.2188,29.9219 Q463.4688,29.9219 462.3281,29.1875 Q461.2031,28.4375 460.6406,27.0938 Q460.0938,25.7344 460.0938,23.9375 Q460.0938,21.9063 460.75,20.4531 Q461.4063,19 462.6875,18.2188 Q463.9688,17.4375 465.8438,17.4375 Q466.7344,17.4375 467.4063,17.625 Q468.0781,17.7969 468.7656,18.1406 L467.9531,20.1563 Q467.3281,19.8438 466.7813,19.7188 Q466.25,19.5938 465.7656,19.5938 Q464.5938,19.5938 463.8906,20.125 Q463.1875,20.6563 462.8906,21.6094 Q462.5938,22.5625 462.5938,23.8281 Q462.5938,25.8438 463.3125,26.8125 Q464.0313,27.7656 465.625,27.7656 Q466.2188,27.7656 466.8438,27.6094 Q467.4688,27.4531 468.2969,27.0781 L468.2969,29.2969 Q467.5625,29.6094 466.7656,29.7656 Q465.9844,29.9219 465.2188,29.9219 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="486.25" y="28.432">CameraScalar</text><line style="stroke:#181818;stroke-width:0.5;" x1="374" x2="659" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="381" y="51.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="393" y="57.9659">board : Board</text><ellipse cx="384" cy="73.1019" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="393" y="77.0339">cameraOffset : float</text><ellipse cx="384" cy="92.1698" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="393" y="96.1018">padding : float = 2</text><ellipse cx="384" cy="111.2377" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="393" y="115.1697">yOffset : float = 1</text><line style="stroke:#181818;stroke-width:0.5;" x1="374" x2="659" y1="123.2717" y2="123.2717"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="381" y="135.3056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="393" y="142.2376">Start() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="381" y="154.3735"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="393" y="161.3055">RepositionCamera(x:float, y:float) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="381" y="173.4415"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="393" y="180.3734">Update() : void</text></g><!--MD5=[83b3cf3d23d77c6f1e1b5291a241bc2a]
class MonoBehaviour--><g id="elem_MonoBehaviour"><rect fill="#F1F1F1" height="48" id="MonoBehaviour" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="24" y="807.74"/><ellipse cx="39" cy="823.74" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M38.4688,830.6619 Q36.7188,830.6619 35.5781,829.9275 Q34.4531,829.1775 33.8906,827.8338 Q33.3438,826.4744 33.3438,824.6775 Q33.3438,822.6463 34,821.1931 Q34.6563,819.74 35.9375,818.9588 Q37.2188,818.1775 39.0938,818.1775 Q39.9844,818.1775 40.6563,818.365 Q41.3281,818.5369 42.0156,818.8806 L41.2031,820.8963 Q40.5781,820.5838 40.0313,820.4588 Q39.5,820.3338 39.0156,820.3338 Q37.8438,820.3338 37.1406,820.865 Q36.4375,821.3963 36.1406,822.3494 Q35.8438,823.3025 35.8438,824.5681 Q35.8438,826.5838 36.5625,827.5525 Q37.2813,828.5056 38.875,828.5056 Q39.4688,828.5056 40.0938,828.3494 Q40.7188,828.1931 41.5469,827.8181 L41.5469,830.0369 Q40.8125,830.3494 40.0156,830.5056 Q39.2344,830.6619 38.4688,830.6619 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="53" y="829.172">MonoBehaviour</text><line style="stroke:#181818;stroke-width:0.5;" x1="25" x2="161" y1="839.74" y2="839.74"/><line style="stroke:#181818;stroke-width:0.5;" x1="25" x2="161" y1="847.74" y2="847.74"/></g><!--MD5=[dd8a4c39a55de402715073e2862d1c2e]
class Dot--><g id="elem_Dot"><rect codeLine="81" fill="#F1F1F1" height="753.5129" id="Dot" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="332" x="350.5" y="222.98"/><ellipse cx="500.75" cy="238.98" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M500.2188,245.9019 Q498.4688,245.9019 497.3281,245.1675 Q496.2031,244.4175 495.6406,243.0738 Q495.0938,241.7144 495.0938,239.9175 Q495.0938,237.8863 495.75,236.4331 Q496.4063,234.98 497.6875,234.1988 Q498.9688,233.4175 500.8438,233.4175 Q501.7344,233.4175 502.4063,233.605 Q503.0781,233.7769 503.7656,234.1206 L502.9531,236.1363 Q502.3281,235.8238 501.7813,235.6988 Q501.25,235.5738 500.7656,235.5738 Q499.5938,235.5738 498.8906,236.105 Q498.1875,236.6363 497.8906,237.5894 Q497.5938,238.5425 497.5938,239.8081 Q497.5938,241.8238 498.3125,242.7925 Q499.0313,243.7456 500.625,243.7456 Q501.2188,243.7456 501.8438,243.5894 Q502.4688,243.4331 503.2969,243.0581 L503.2969,245.2769 Q502.5625,245.5894 501.7656,245.7456 Q500.9844,245.9019 500.2188,245.9019 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="23" x="521.25" y="244.412">Dot</text><line style="stroke:#181818;stroke-width:0.5;" x1="351.5" x2="681.5" y1="254.98" y2="254.98"/><ellipse cx="361.5" cy="270.014" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="370.5" y="273.9459">column : int</text><ellipse cx="361.5" cy="289.0819" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="55" x="370.5" y="293.0139">row : int</text><ellipse cx="361.5" cy="308.1498" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="370.5" y="312.0818">previousColumn : int</text><ellipse cx="361.5" cy="327.2177" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="370.5" y="331.1497">previousRow : int</text><ellipse cx="361.5" cy="346.2856" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="370.5" y="350.2176">targetX : int</text><ellipse cx="361.5" cy="365.3535" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="370.5" y="369.2855">targetY : int</text><ellipse cx="361.5" cy="384.4215" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="370.5" y="388.3534">isMatched : bool = false</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="400.4894"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="370.5" y="407.4214">hintManager : HintManager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="419.5573"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="370.5" y="426.4893">findMatches : FindMatches</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="438.6252"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="370.5" y="445.5572">board : Board</text><ellipse cx="361.5" cy="460.6931" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="370.5" y="464.6251">otherDot : GameObject</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="476.761"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="370.5" y="483.693">firstTouchPosition : Vector2</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="495.829"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="370.5" y="502.7609">finalTouchPosition : Vector2</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="514.8969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="370.5" y="521.8289">tempPosition : Vector2</text><ellipse cx="361.5" cy="536.9648" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="370.5" y="540.8968">swipeAngle : float = 0</text><ellipse cx="361.5" cy="556.0327" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="370.5" y="559.9647">swipeResist : float = 1f</text><ellipse cx="361.5" cy="575.1006" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="370.5" y="579.0326">isColorBomb : bool</text><ellipse cx="361.5" cy="594.1685" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="370.5" y="598.1005">isColumnBomb : bool</text><ellipse cx="361.5" cy="613.2365" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="370.5" y="617.1684">isRowBomb : bool</text><ellipse cx="361.5" cy="632.3044" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="370.5" y="636.2364">isAdjacentBomb : bool</text><ellipse cx="361.5" cy="651.3723" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="370.5" y="655.3043">adjacentMarker : GameObject</text><ellipse cx="361.5" cy="670.4402" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="370.5" y="674.3722">rowArrow : GameObject</text><ellipse cx="361.5" cy="689.5081" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="370.5" y="693.4401">columnArrow : GameObject</text><ellipse cx="361.5" cy="708.576" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="370.5" y="712.508">colorBomb : GameObject</text><line style="stroke:#181818;stroke-width:0.5;" x1="351.5" x2="681.5" y1="720.61" y2="720.61"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="732.644"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="370.5" y="739.5759">Start() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="751.7119"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="370.5" y="758.6439">OnMouseOver() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="770.7798"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="97" x="370.5" y="777.7118">Update() : void</text><ellipse cx="361.5" cy="792.8477" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="370.5" y="796.7797">CheckMoveCo() : IEnumerator</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="808.9156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="370.5" y="815.8476">OnMouseDown() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="827.9835"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="370.5" y="834.9155">OnMouseUp() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="847.0515"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="370.5" y="853.9834">CalculateAngle() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="866.1194"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="370.5" y="873.0514">MovePiecesEngine(direction:Vector2Int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="358.5" y="885.1873"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="370.5" y="892.1193">MovePieces() : void</text><ellipse cx="361.5" cy="907.2552" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="370.5" y="911.1872">MakeRowBomb() : void</text><ellipse cx="361.5" cy="926.3231" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="370.5" y="930.2551">MakeColumnBomb() : void</text><ellipse cx="361.5" cy="945.391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="370.5" y="949.323">MakeColorBomb() : void</text><ellipse cx="361.5" cy="964.459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="370.5" y="968.3909">MakeAdjacentBomb() : void</text></g><!--MD5=[42fc56340decc66cd27f57a6fafaf26c]
class FadePanelController--><g id="elem_FadePanelController"><rect codeLine="121" fill="#F1F1F1" height="105.2038" id="FadePanelController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="200" x="416.5" y="1011.14"/><ellipse cx="445.9" cy="1027.14" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M445.3688,1034.0619 Q443.6188,1034.0619 442.4781,1033.3275 Q441.3531,1032.5775 440.7906,1031.2337 Q440.2438,1029.8744 440.2438,1028.0775 Q440.2438,1026.0462 440.9,1024.5931 Q441.5563,1023.14 442.8375,1022.3587 Q444.1188,1021.5775 445.9938,1021.5775 Q446.8844,1021.5775 447.5563,1021.765 Q448.2281,1021.9369 448.9156,1022.2806 L448.1031,1024.2962 Q447.4781,1023.9837 446.9313,1023.8587 Q446.4,1023.7337 445.9156,1023.7337 Q444.7438,1023.7337 444.0406,1024.265 Q443.3375,1024.7962 443.0406,1025.7494 Q442.7438,1026.7025 442.7438,1027.9681 Q442.7438,1029.9837 443.4625,1030.9525 Q444.1813,1031.9056 445.775,1031.9056 Q446.3688,1031.9056 446.9938,1031.7494 Q447.6188,1031.5931 448.4469,1031.2181 L448.4469,1033.4369 Q447.7125,1033.7494 446.9156,1033.9056 Q446.1344,1034.0619 445.3688,1034.0619 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="463.1" y="1032.572">FadePanelController</text><line style="stroke:#181818;stroke-width:0.5;" x1="417.5" x2="615.5" y1="1043.14" y2="1043.14"/><ellipse cx="427.5" cy="1058.174" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="436.5" y="1062.1059">panelAnim : Animator</text><ellipse cx="427.5" cy="1077.2419" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="436.5" y="1081.1739">gameInfoAnim : Animator</text><line style="stroke:#181818;stroke-width:0.5;" x1="417.5" x2="615.5" y1="1089.2758" y2="1089.2758"/><ellipse cx="427.5" cy="1104.3098" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="436.5" y="1108.2418">OK() : void</text></g><!--MD5=[05da6f9c3b20afe1900b3e9902dc36dd]
class FindMatches--><g id="elem_FindMatches"><rect codeLine="127" fill="#F1F1F1" height="334.0188" id="FindMatches" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="555" x="239" y="1151.73"/><ellipse cx="469.25" cy="1167.73" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M468.7188,1174.6519 Q466.9688,1174.6519 465.8281,1173.9175 Q464.7031,1173.1675 464.1406,1171.8238 Q463.5938,1170.4644 463.5938,1168.6675 Q463.5938,1166.6363 464.25,1165.1831 Q464.9063,1163.73 466.1875,1162.9488 Q467.4688,1162.1675 469.3438,1162.1675 Q470.2344,1162.1675 470.9063,1162.355 Q471.5781,1162.5269 472.2656,1162.8706 L471.4531,1164.8863 Q470.8281,1164.5738 470.2813,1164.4488 Q469.75,1164.3238 469.2656,1164.3238 Q468.0938,1164.3238 467.3906,1164.855 Q466.6875,1165.3863 466.3906,1166.3394 Q466.0938,1167.2925 466.0938,1168.5581 Q466.0938,1170.5738 466.8125,1171.5425 Q467.5313,1172.4956 469.125,1172.4956 Q469.7188,1172.4956 470.3438,1172.3394 Q470.9688,1172.1831 471.7969,1171.8081 L471.7969,1174.0269 Q471.0625,1174.3394 470.2656,1174.4956 Q469.4844,1174.6519 468.7188,1174.6519 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="489.75" y="1173.162">FindMatches</text><line style="stroke:#181818;stroke-width:0.5;" x1="240" x2="793" y1="1183.73" y2="1183.73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1195.764"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="259" y="1202.6959">board : Board</text><ellipse cx="250" cy="1217.8319" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="241" x="259" y="1221.7639">currentMatches : List&lt;GameObject&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="240" x2="793" y1="1229.8658" y2="1229.8658"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1241.8998"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="259" y="1248.8318">Start() : void</text><ellipse cx="250" cy="1263.9677" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="259" y="1267.8997">FindAllMatches() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1280.0356"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="439" x="259" y="1286.9676">IsAdjacentBomb(dot1:Dot, dot2:Dot, dot3:Dot) : List&lt;GameObject&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1299.1035"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="408" x="259" y="1306.0355">IsRowBomb(dot1:Dot, dot2:Dot, dot3:Dot) : List&lt;GameObject&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1318.1715"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="432" x="259" y="1325.1034">IsColumnBomb(dot1:Dot, dot2:Dot, dot3:Dot) : List&lt;GameObject&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1337.2394"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="259" y="1344.1714">AddToListAndMatch(dot:GameObject) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1356.3073"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="529" x="259" y="1363.2393">GetNearbyPieces(dot1:GameObject, dot2:GameObject, dot3:GameObject) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1375.3752"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="259" y="1382.3072">FindAllMatchesCo() : IEnumerator</text><ellipse cx="250" cy="1397.4431" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="259" y="1401.3751">MatchPiecesOfColor(color:string) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1413.511"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="393" x="259" y="1420.443">GetAdjacentPieces(column:int, row:int) : List&lt;GameObject&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1432.579"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="331" x="259" y="1439.5109">GetColumnPieces(column:int) : List&lt;GameObject&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="247" y="1451.6469"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="259" y="1458.5789">GetRowPieces(row:int) : List&lt;GameObject&gt;</text><ellipse cx="250" cy="1473.7148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="259" y="1477.6468">CheckBombs() : void</text></g><!--MD5=[ddd33a29ea908bbaf2af30a135364761]
class BlankGoal--><g id="elem_BlankGoal"><rect codeLine="145" fill="#F1F1F1" height="124.2717" id="BlankGoal" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="172" x="7" y="648.6"/><ellipse cx="55.25" cy="664.6" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M54.7188,671.5219 Q52.9688,671.5219 51.8281,670.7875 Q50.7031,670.0375 50.1406,668.6938 Q49.5938,667.3344 49.5938,665.5375 Q49.5938,663.5063 50.25,662.0531 Q50.9063,660.6 52.1875,659.8188 Q53.4688,659.0375 55.3438,659.0375 Q56.2344,659.0375 56.9063,659.225 Q57.5781,659.3969 58.2656,659.7406 L57.4531,661.7563 Q56.8281,661.4438 56.2813,661.3188 Q55.75,661.1938 55.2656,661.1938 Q54.0938,661.1938 53.3906,661.725 Q52.6875,662.2563 52.3906,663.2094 Q52.0938,664.1625 52.0938,665.4281 Q52.0938,667.4438 52.8125,668.4125 Q53.5313,669.3656 55.125,669.3656 Q55.7188,669.3656 56.3438,669.2094 Q56.9688,669.0531 57.7969,668.6781 L57.7969,670.8969 Q57.0625,671.2094 56.2656,671.3656 Q55.4844,671.5219 54.7188,671.5219 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="75.75" y="670.032">BlankGoal</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="178" y1="680.6" y2="680.6"/><ellipse cx="18" cy="695.634" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="27" y="699.5659">numberNeeded : int</text><ellipse cx="18" cy="714.7019" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="27" y="718.6339">numberCollected : int</text><ellipse cx="18" cy="733.7698" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="27" y="737.7018">goalSprite : Sprite</text><ellipse cx="18" cy="752.8377" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="27" y="756.7697">matchValue : string</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="178" y1="764.8717" y2="764.8717"/></g><!--MD5=[a4522694234bcd4924daf9d31214ec6f]
reverse link MonoBehaviour to CameraScalar--><g id="link_MonoBehaviour_CameraScalar"><path codeLine="80" d="M177.7,792.53 C178.14,791.94 178.58,791.34 179,790.74 C329.11,576.78 80.76,413.76 239,205.74 C271.37,163.19 322.92,137.39 372.78,121.75 " fill="none" id="MonoBehaviour-backto-CameraScalar" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="182.62,797.51,163.31,806.23,172.96,787.37,182.62,797.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[44313e97516be8a09e08c2c42776a7dc]
reverse link MonoBehaviour to Dot--><g id="link_MonoBehaviour_Dot"><path codeLine="120" d="M165.23,797.82 C169.91,795.46 174.53,793.08 179,790.74 C235.37,761.19 296.11,727.35 350.26,696.44 " fill="none" id="MonoBehaviour-backto-Dot" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="168.35,804.08,147.32,806.68,162.14,791.54,168.35,804.08" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[2b48ed1cb64280cacd387ac1be2b4fd7]
reverse link MonoBehaviour to FadePanelController--><g id="link_MonoBehaviour_FadePanelController"><path codeLine="126" d="M120.96,873.97 C146.83,911.04 189.23,963.61 239,993.74 C292.69,1026.24 361,1043.72 416.28,1053.08 " fill="none" id="MonoBehaviour-backto-FadePanelController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="115.21,877.95,109.84,857.45,126.82,870.13,115.21,877.95" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[f2250e6faaaf3f1048fc511d84e16012]
reverse link MonoBehaviour to FindMatches--><g id="link_MonoBehaviour_FindMatches"><path codeLine="144" d="M107.12,876.43 C127.32,939.4 170.98,1055.3 239,1133.74 C244.2,1139.74 249.64,1145.63 255.28,1151.4 " fill="none" id="MonoBehaviour-backto-FindMatches" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="100.51,878.78,101.29,857.6,113.89,874.64,100.51,878.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[d34b90f9dea8a99501a3502326100742]
@startuml
left to right direction
class Backgroundtile {
    + hitPoints : int
    - spriteRenderer : SpriteRenderer
    + breakSprite : Sprite
    - Start() : void
    - Update() : void
    + TakeDamage(damage:int) : void
    - MakeBreakColor() : void
    - MakeBreakSprite() : void
}
MonoBehaviour <|- - Backgroundtile
enum GameState {
    wait,
    move,
}
enum TileKind {
    Breakable,
    Blank,
    Normal,
}
class TileType {
    + x : int
    + y : int
    + tileKind : TileKind
}
class Board {
    + currentState : GameState
    + width : int
    + height : int
    + offSet : int
    + tilePrefab : GameObject
    + breakableTilePrefab : GameObject
    + dots : GameObject[]
    + destroyEffect : GameObject
    + boardLayout : TileType[]
    - blankSpaces : bool[,]
    - breakableTiles : Backgroundtile[,]
    + allDots : GameObject[,]
    + currentDot : Dot
    - findMatches : FindMatches
    - scoreManager : ScoreManager
    - soundManager : SoundManager
    + basePieceVal : int = 10
    - streakValue : int = 1
    + refillDelay : float = 0.5f
    + scoreGoals : int[]
    - Start() : void
    + GenerateBlankSpaces() : void
    + GenerateBreakableTiles() : void
    - SetUp() : void
    - MatchesAt(column:int, row:int, piece:GameObject) : bool
    - ColumnOrRow() : bool
    - CheckToMakeBombs() : void
    - DestroyMatchesAt(column:int, row:int) : void
    + DestroyMatches() : void
    - DecreaseRowCo2() : IEnumerator
    - RefillBoard() : void
    - MatchesOnBoard() : bool
    - FillBoardCo() : IEnumerator
    - SwitchPieces(column:int, row:int, direction:Vector2Int) : void
    - CheckForMatches() : bool
    + SwitchAndCheck(column:int, row:int, direction:Vector2Int) : bool
    - IsDeadlocked() : bool
    - ShuffleBoard() : IEnumerator
}
MonoBehaviour <|- - Board

newpage
left to right direction
class CameraScalar {
    - board : Board
    + cameraOffset : float
    + padding : float = 2
    + yOffset : float = 1
    - Start() : void
    - RepositionCamera(x:float, y:float) : void
    - Update() : void
}
MonoBehaviour <|- - CameraScalar
class Dot {
    + column : int
    + row : int
    + previousColumn : int
    + previousRow : int
    + targetX : int
    + targetY : int
    + isMatched : bool = false
    - hintManager : HintManager
    - findMatches : FindMatches
    - board : Board
    + otherDot : GameObject
    - firstTouchPosition : Vector2
    - finalTouchPosition : Vector2
    - tempPosition : Vector2
    + swipeAngle : float = 0
    + swipeResist : float = 1f
    + isColorBomb : bool
    + isColumnBomb : bool
    + isRowBomb : bool
    + isAdjacentBomb : bool
    + adjacentMarker : GameObject
    + rowArrow : GameObject
    + columnArrow : GameObject
    + colorBomb : GameObject
    - Start() : void
    - OnMouseOver() : void
    - Update() : void
    + CheckMoveCo() : IEnumerator
    - OnMouseDown() : void
    - OnMouseUp() : void
    - CalculateAngle() : void
    - MovePiecesEngine(direction:Vector2Int) : void
    - MovePieces() : void
    + MakeRowBomb() : void
    + MakeColumnBomb() : void
    + MakeColorBomb() : void
    + MakeAdjacentBomb() : void
}
MonoBehaviour <|- - Dot
class FadePanelController {
    + panelAnim : Animator
    + gameInfoAnim : Animator
    + OK() : void
}
MonoBehaviour <|- - FadePanelController
class FindMatches {
    - board : Board
    + currentMatches : List<GameObject>
    - Start() : void
    + FindAllMatches() : void
    - IsAdjacentBomb(dot1:Dot, dot2:Dot, dot3:Dot) : List<GameObject>
    - IsRowBomb(dot1:Dot, dot2:Dot, dot3:Dot) : List<GameObject>
    - IsColumnBomb(dot1:Dot, dot2:Dot, dot3:Dot) : List<GameObject>
    - AddToListAndMatch(dot:GameObject) : void
    - GetNearbyPieces(dot1:GameObject, dot2:GameObject, dot3:GameObject) : void
    - FindAllMatchesCo() : IEnumerator
    + MatchPiecesOfColor(color:string) : void
    - GetAdjacentPieces(column:int, row:int) : List<GameObject>
    - GetColumnPieces(column:int) : List<GameObject>
    - GetRowPieces(row:int) : List<GameObject>
    + CheckBombs() : void
}
MonoBehaviour <|- - FindMatches
class BlankGoal {
    + numberNeeded : int
    + numberCollected : int
    + goalSprite : Sprite
    + matchValue : string
}

newpage
left to right direction
class GoalManager {
    + levelGoals : BlankGoal[]
    + goalPrefab : GameObject
    + goalIntroParent : GameObject
    + goalGameParent : GameObject
    - Start() : void
    - SetupIntroGoals() : void
    - Update() : void
}
MonoBehaviour <|- - GoalManager
class GoalPanel {
    + thisImage : Image
    + thisSprite : Sprite
    + thisText : TextMeshProUGUI
    + thisString : string
    - Start() : void
    - Setup() : void
    - Update() : void
}
MonoBehaviour <|- - GoalPanel
class HintManager {
    - board : Board
    + hintDelay : float
    - hintDelaySeconds : float
    + hintParticle : GameObject
    + currentHint : GameObject
    - Start() : void
    - Update() : void
    - FindAllMatches() : List<GameObject>
    - RandomPickOne() : GameObject
    - MarkHint() : void
    + DestroyHint() : void
}
MonoBehaviour <|- - HintManager
class ScoreManager {
    - board : Board
    + scoreText : TextMeshProUGUI
    + score : int
    + scoreBar : Image
    - Start() : void
    - Update() : void
    + IncreaseScore(amountToIncrease:int) : void
    - LoadBar() : void
}
MonoBehaviour <|- - ScoreManager
class SoundManager {
    + destroyNoise : AudioSource[]
    + backgroundMusic : AudioSource
    + introSection : AudioSource
    - introPlayed : bool = false
    + Start() : void
    + Update() : void
    - PlayBackground() : void
    - CheckPlayIntroToPlayBG() : void
    - PlayIntro() : void
    + PlayRandomDestroyNoise() : void
}
MonoBehaviour <|- - SoundManager
@enduml

PlantUML version 1.2022.7(Tue Aug 23 00:01:30 ICT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>